<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.15.0@5c774aca4746caf3d239d9c8cadb9f882ca29352">
  <file src="src/AbstractContainer.php">
    <DocblockTypeContradiction>
      <code><![CDATA[(null === $key)
            && is_array($metadata)]]></code>
      <code><![CDATA[(null === $key)
            && is_array($metadata)]]></code>
      <code>null === $key</code>
      <code>null === $key</code>
      <code>null === static::$defaultManager</code>
    </DocblockTypeContradiction>
    <InvalidStringClass>
      <code>new static::$managerDefaultClass()</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code>$container</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code>$container</code>
      <code>$metadata['EXPIRE_HOPS_KEYS']</code>
      <code>$metadata['EXPIRE_KEYS']</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$metadata['EXPIRE_HOPS']['hops']</code>
      <code>$metadata['EXPIRE_HOPS']['ts']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['hops']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['hops']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['ts']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['ts']</code>
      <code>$metadata['EXPIRE_KEYS'][$key]</code>
      <code>$metadata['EXPIRE_KEYS'][$key]</code>
      <code>$storage[$name][$key]</code>
      <code>$storage[$name][$key]</code>
      <code>$storage[$name][$key]</code>
      <code>$storage[$name][$key]</code>
      <code>$storage[$name][$key]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code>$metadata['EXPIRE_HOPS']['hops']</code>
      <code>$metadata['EXPIRE_HOPS']['ts']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['hops']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['hops']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['ts']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['ts']</code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$container</code>
      <code>$container</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata['EXPIRE_HOPS']['hops']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['hops']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['hops']</code>
      <code>$old</code>
      <code>$storage[$name][$key]</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>exchangeArray</code>
      <code>getArrayCopy</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code>$metadata['EXPIRE_HOPS']['hops']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['hops']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS'][$key]['hops']</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$container instanceof ArrayObject ? $container->getArrayCopy() : $container]]></code>
      <code><![CDATA[$container instanceof ArrayObject ? $container->getArrayCopy() : $container]]></code>
      <code>$old</code>
      <code>$old</code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$old->getArrayCopy()]]></code>
      <code>getIterator</code>
      <code>new ArrayIterator($container)</code>
    </MixedReturnTypeCoercion>
    <MoreSpecificReturnType>
      <code>Container</code>
      <code>Container</code>
      <code>Container</code>
    </MoreSpecificReturnType>
    <ParamNameMismatch>
      <code>$input</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code>$key</code>
      <code>$key</code>
      <code>$name</code>
      <code>$storage</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess>
      <code>$storage[$name]</code>
      <code><![CDATA[$storage[$this->getName()]]]></code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayAssignment>
      <code>$storage[$name]</code>
    </PossiblyNullArrayAssignment>
    <PossiblyNullPropertyAssignmentValue>
      <code>$name</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>$storage</code>
      <code>$storage</code>
      <code>$storage</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code>$_SERVER['REQUEST_TIME']</code>
      <code>$_SERVER['REQUEST_TIME']</code>
      <code>$_SERVER['REQUEST_TIME']</code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor>
      <code>$manager</code>
      <code>AbstractContainer</code>
      <code>AbstractContainer</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[(null !== $key)
            && is_array($metadata)]]></code>
      <code><![CDATA[(null !== $key)
            && is_array($metadata)]]></code>
      <code>is_array($vars)</code>
      <code>is_array($vars)</code>
      <code><![CDATA[is_scalar($vars) && null !== $vars]]></code>
      <code>null !== $key</code>
      <code>null !== $key</code>
      <code>null !== $vars</code>
    </RedundantConditionGivenDocblockType>
    <TooManyArguments>
      <code><![CDATA[static fn() => $ts]]></code>
      <code><![CDATA[static fn() => ['hops' => $hops, 'ts' => $ts]]]></code>
    </TooManyArguments>
    <MethodSignatureMustProvideReturnType occurrences="5">
      <code>offsetSet</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="src/AbstractManager.php">
    <MixedMethodCall>
      <code><![CDATA[new $this->defaultConfigClass()]]></code>
      <code><![CDATA[new $this->defaultStorageClass()]]></code>
    </MixedMethodCall>
    <PropertyNotSetInConstructor>
      <code>$saveHandler</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/AbstractValidatorChain.php">
    <DeprecatedClass>
      <code>AbstractValidatorChainEM3</code>
    </DeprecatedClass>
  </file>
  <file src="src/Config/SessionConfig.php">
    <DocblockTypeContradiction>
      <code>! is_numeric($hashBitsPerCharacter)</code>
      <code>! is_numeric($sidBitsPerCharacter)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch>
      <code>SessionConfig</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument>
      <code>[$this, 'handleError']</code>
      <code>[$this, 'handleError']</code>
    </InvalidArgument>
    <InvalidNullableReturnType>
      <code>SessionConfig</code>
    </InvalidNullableReturnType>
    <InvalidScalarArgument>
      <code>$hashBitsPerCharacter</code>
    </InvalidScalarArgument>
    <MissingConstructor>
      <code>$serializeHandler</code>
      <code>$validHashFunctions</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$knownHandlers</code>
    </MixedArgumentTypeCoercion>
    <MixedInferredReturnType>
      <code>false|string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>$callback($module)</code>
      <code>$callback()</code>
    </MixedReturnStatement>
    <PossiblyFalsePropertyAssignmentValue>
      <code>false</code>
      <code>false</code>
    </PossiblyFalsePropertyAssignmentValue>
    <RedundantCast>
      <code>(string) $iniGet</code>
    </RedundantCast>
    <RedundantCastGivenDocblockType>
      <code>(int) $hashBitsPerCharacter</code>
      <code>(int) $sidBitsPerCharacter</code>
      <code>(string) $cacheLimiter</code>
      <code>(string) $serializeHandler</code>
      <code>(string) $serializeHandler</code>
    </RedundantCastGivenDocblockType>
    <UnusedVariable>
      <code>$prefix</code>
    </UnusedVariable>
  </file>
  <file src="src/Config/StandardConfig.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($options) && ! $options instanceof Traversable]]></code>
      <code>! is_numeric($sidLength)</code>
      <code>is_numeric($cacheExpire)</code>
      <code>is_numeric($cookieLifetime)</code>
      <code>is_numeric($entropyLength)</code>
      <code>is_numeric($gcDivisor)</code>
      <code>is_numeric($gcMaxlifetime)</code>
      <code>is_numeric($gcProbability)</code>
      <code>is_numeric($hashBitsPerCharacter)</code>
      <code>is_numeric($rememberMeSeconds)</code>
      <code>is_numeric($sidBitsPerCharacter)</code>
      <code>is_string($cookieDomain)</code>
      <code><![CDATA[null === $this->cookieDomain]]></code>
      <code><![CDATA[null === $this->cookieHttpOnly]]></code>
      <code><![CDATA[null === $this->cookieLifetime]]></code>
      <code><![CDATA[null === $this->cookiePath]]></code>
      <code><![CDATA[null === $this->cookieSameSite]]></code>
      <code><![CDATA[null === $this->cookieSecure]]></code>
      <code><![CDATA[null === $this->name]]></code>
      <code><![CDATA[null === $this->rememberMeSeconds]]></code>
      <code><![CDATA[null === $this->savePath]]></code>
      <code><![CDATA[null === $this->useCookies]]></code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>StandardConfig</code>
      <code>bool|string</code>
      <code>bool|string</code>
      <code>null|string</code>
      <code>string|null</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument>
      <code>HostnameValidator::ALLOW_ALL</code>
    </InvalidArgument>
    <InvalidReturnType>
      <code>mixed</code>
    </InvalidReturnType>
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
    <MissingConstructor>
      <code>$cookieDomain</code>
      <code>$cookieDomain</code>
      <code>$cookieHttpOnly</code>
      <code>$cookieHttpOnly</code>
      <code>$cookieLifetime</code>
      <code>$cookieLifetime</code>
      <code>$cookiePath</code>
      <code>$cookiePath</code>
      <code>$cookieSameSite</code>
      <code>$cookieSameSite</code>
      <code>$cookieSecure</code>
      <code>$cookieSecure</code>
      <code>$name</code>
      <code>$name</code>
      <code>$rememberMeSeconds</code>
      <code>$savePath</code>
      <code>$savePath</code>
      <code>$useCookies</code>
      <code>$useCookies</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$key</code>
      <code>$key</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$key</code>
      <code><![CDATA[$this->cookieDomain]]></code>
      <code><![CDATA[$this->cookieHttpOnly]]></code>
      <code><![CDATA[$this->cookieLifetime]]></code>
      <code><![CDATA[$this->cookiePath]]></code>
      <code><![CDATA[$this->cookieSameSite]]></code>
      <code><![CDATA[$this->cookieSecure]]></code>
      <code><![CDATA[$this->name]]></code>
      <code><![CDATA[$this->rememberMeSeconds]]></code>
      <code><![CDATA[$this->savePath]]></code>
      <code><![CDATA[$this->useCookies]]></code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
      <code>bool|string</code>
      <code>bool|string</code>
      <code>int</code>
      <code>int</code>
      <code>int</code>
      <code>int</code>
      <code>int</code>
      <code>null|string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string|null</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->cookieDomain]]></code>
      <code><![CDATA[$this->cookieDomain]]></code>
      <code><![CDATA[$this->cookieHttpOnly]]></code>
      <code><![CDATA[$this->cookieHttpOnly]]></code>
      <code><![CDATA[$this->cookieLifetime]]></code>
      <code><![CDATA[$this->cookieLifetime]]></code>
      <code><![CDATA[$this->cookiePath]]></code>
      <code><![CDATA[$this->cookiePath]]></code>
      <code><![CDATA[$this->cookieSameSite]]></code>
      <code><![CDATA[$this->cookieSameSite]]></code>
      <code><![CDATA[$this->cookieSecure]]></code>
      <code><![CDATA[$this->cookieSecure]]></code>
      <code><![CDATA[$this->getOption('hash_function')]]></code>
      <code><![CDATA[$this->name]]></code>
      <code><![CDATA[$this->name]]></code>
      <code><![CDATA[$this->options['cache_expire']]]></code>
      <code><![CDATA[$this->options['entropy_file']]]></code>
      <code><![CDATA[$this->options['entropy_length']]]></code>
      <code><![CDATA[$this->options['gc_divisor']]]></code>
      <code><![CDATA[$this->options['gc_maxlifetime']]]></code>
      <code><![CDATA[$this->options['gc_probability']]]></code>
      <code><![CDATA[$this->options['hash_bits_per_character']]]></code>
      <code><![CDATA[$this->options['sid_bits_per_character']]]></code>
      <code><![CDATA[$this->options['sid_length']]]></code>
      <code><![CDATA[$this->rememberMeSeconds]]></code>
      <code><![CDATA[$this->rememberMeSeconds]]></code>
      <code><![CDATA[$this->savePath]]></code>
      <code><![CDATA[$this->savePath]]></code>
      <code><![CDATA[$this->useCookies]]></code>
      <code><![CDATA[$this->useCookies]]></code>
    </MixedReturnStatement>
    <PossiblyInvalidArgument>
      <code>str_replace('_', ' ', $key)</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code>str_replace('_', ' ', $key)</code>
    </PossiblyInvalidCast>
    <RedundantCastGivenDocblockType>
      <code>(bool) $cookieHttpOnly</code>
      <code>(bool) $cookieSecure</code>
      <code>(bool) $useCookies</code>
      <code>(int) $cacheExpire</code>
      <code>(int) $cookieLifetime</code>
      <code>(int) $gcDivisor</code>
      <code>(int) $gcMaxlifetime</code>
      <code>(int) $gcProbability</code>
      <code>(int) $hashBitsPerCharacter</code>
      <code>(int) $rememberMeSeconds</code>
      <code>(int) $sidBitsPerCharacter</code>
      <code>(int) $sidLength</code>
      <code>(string) $cookiePath</code>
      <code>(string) $cookieSameSite</code>
      <code>(string) $name</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/ConfigProvider.php">
    <UndefinedClass>
      <code>ConfigInterface</code>
      <code>StorageInterface</code>
      <code>\Zend\Session\ManagerInterface</code>
      <code>\Zend\Session\SessionManager</code>
    </UndefinedClass>
  </file>
  <file src="src/Container.php">
    <MixedArrayAccess>
      <code>$storage[$name][$key]</code>
    </MixedArrayAccess>
    <PropertyNotSetInConstructor>
      <code>Container</code>
    </PropertyNotSetInConstructor>
    <MethodSignatureMustProvideReturnType>
      <code>offsetGet</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="src/SaveHandler/Cache.php">
    <ImplementedReturnTypeMismatch>
      <code>bool</code>
    </ImplementedReturnTypeMismatch>
    <PropertyNotSetInConstructor>
      <code>$sessionName</code>
      <code>$sessionSavePath</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(bool) $this->getCacheStorage()->removeItem($id)]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/SaveHandler/DbTableGateway.php">
    <ImplementedReturnTypeMismatch>
      <code>true</code>
    </ImplementedReturnTypeMismatch>
    <InvalidPropertyAssignmentValue>
      <code>ini_get('session.gc_maxlifetime')</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement>
      <code><![CDATA[(bool) $this->tableGateway->delete(
            sprintf(
                '%s < %d',
                $platform->quoteIdentifier($this->options->getModifiedColumn()),
                time() - $this->lifetime
            )
        )]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>true</code>
    </InvalidReturnType>
    <MixedAssignment>
      <code>$row</code>
      <code>$rows</code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$row->{$this->options->getModifiedColumn()}]]></code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$row->{$this->options->getDataColumn()}]]></code>
      <code><![CDATA[$row->{$this->options->getLifetimeColumn()}]]></code>
      <code><![CDATA[$row->{$this->options->getModifiedColumn()}]]></code>
    </MixedPropertyFetch>
    <PropertyNotSetInConstructor>
      <code>$lifetime</code>
      <code>$sessionName</code>
      <code>$sessionSavePath</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(string) $data</code>
    </RedundantCastGivenDocblockType>
    <UndefinedInterfaceMethod>
      <code>current</code>
      <code>current</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/SaveHandler/DbTableGatewayOptions.php">
    <MissingTemplateParam>
      <code>DbTableGatewayOptions</code>
    </MissingTemplateParam>
    <RedundantCastGivenDocblockType>
      <code>(string) $dataColumn</code>
      <code>(string) $idColumn</code>
      <code>(string) $lifetimeColumn</code>
      <code>(string) $modifiedColumn</code>
      <code>(string) $nameColumn</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/SaveHandler/MongoDB.php">
    <DocblockTypeContradiction>
      <code><![CDATA[null === ($collection = $options->getCollection())]]></code>
      <code><![CDATA[null === ($database = $options->getDatabase())]]></code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch>
      <code>bool</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument>
      <code><![CDATA[$this->options->getSaveOptions()]]></code>
      <code><![CDATA[$this->options->getSaveOptions()]]></code>
      <code><![CDATA[$this->options->getSaveOptions()]]></code>
    </InvalidArgument>
    <InvalidOperand>
      <code><![CDATA[(string) $session[$this->options->getModifiedField()]]]></code>
    </InvalidOperand>
    <MixedAssignment>
      <code>$timestamp</code>
      <code>$timestamp</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>getData</code>
    </MixedMethodCall>
    <MixedOperand>
      <code>$timestamp</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$session[$this->options->getDataField()]->getData()]]></code>
    </MixedReturnStatement>
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$session[$this->options->getDataField()]]]></code>
      <code><![CDATA[$session[$this->options->getLifetimeField()]]]></code>
      <code><![CDATA[$session[$this->options->getModifiedField()]]]></code>
    </PossiblyInvalidArrayAccess>
    <PropertyNotSetInConstructor>
      <code>$lifetime</code>
      <code>$mongoCollection</code>
      <code>$sessionName</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(string) $data</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/SaveHandler/MongoDBOptions.php">
    <MissingTemplateParam>
      <code>MongoDBOptions</code>
    </MissingTemplateParam>
    <DocblockTypeContradiction>
      <code><![CDATA[$this->saveOptions === ['w' => 1]]]></code>
      <code><![CDATA[$this->saveOptions === ['w' => 1]]]></code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue>
      <code>$saveOptions</code>
      <code><![CDATA[['safe' => true]]]></code>
      <code><![CDATA[['w' => 1]]]></code>
    </InvalidPropertyAssignmentValue>
    <MissingParamType>
      <code>$options</code>
    </MissingParamType>
    <MissingReturnType>
      <code>setUseExpireAfterSecondsIndex</code>
    </MissingReturnType>
    <MixedArgument>
      <code>$options</code>
    </MixedArgument>
    <PropertyNotSetInConstructor>
      <code>$collection</code>
      <code>$database</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(bool) $useExpireAfterSecondsIndex</code>
      <code>(string) $collection</code>
      <code>(string) $dataField</code>
      <code>(string) $database</code>
      <code>(string) $lifetimeField</code>
      <code>(string) $modifiedField</code>
      <code>(string) $nameField</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Service/ContainerAbstractServiceFactory.php">
    <DeprecatedInterface>
      <code>ContainerAbstractServiceFactory</code>
    </DeprecatedInterface>
    <MissingConstructor>
      <code>$config</code>
      <code>$sessionManager</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$config</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$config[$this->configKey]]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$config</code>
      <code>$config</code>
      <code><![CDATA[$this->sessionManager]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>null|ManagerInterface</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->sessionManager]]></code>
      <code><![CDATA[$this->sessionManager]]></code>
    </MixedReturnStatement>
    <ParamNameMismatch>
      <code>$container</code>
      <code>$container</code>
    </ParamNameMismatch>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->sessionManager !== null]]></code>
      <code><![CDATA[null !== $this->config]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Service/SessionConfigFactory.php">
    <DeprecatedInterface>
      <code>SessionConfigFactory</code>
    </DeprecatedInterface>
    <MixedArgument>
      <code>$config</code>
      <code>$config['config_class']</code>
      <code>$config['config_class']</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$config</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>new $class()</code>
    </MixedMethodCall>
    <ParamNameMismatch>
      <code>$services</code>
    </ParamNameMismatch>
  </file>
  <file src="src/Service/SessionManagerFactory.php">
    <DeprecatedInterface>
      <code>SessionManagerFactory</code>
    </DeprecatedInterface>
    <LessSpecificReturnStatement>
      <code>$manager</code>
    </LessSpecificReturnStatement>
    <MixedAssignment>
      <code>$config</code>
      <code>$configService</code>
      <code>$options</code>
      <code>$saveHandler</code>
      <code>$storage</code>
      <code>$validators</code>
    </MixedAssignment>
    <MoreSpecificReturnType>
      <code>SessionManager</code>
    </MoreSpecificReturnType>
    <ParamNameMismatch>
      <code>$services</code>
    </ParamNameMismatch>
  </file>
  <file src="src/Service/StorageFactory.php">
    <DeprecatedInterface>
      <code>StorageFactory</code>
    </DeprecatedInterface>
    <MixedArgument>
      <code>$options</code>
      <code>$type</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$config</code>
      <code>$options</code>
      <code>$type</code>
    </MixedAssignment>
    <ParamNameMismatch>
      <code>$services</code>
    </ParamNameMismatch>
  </file>
  <file src="src/SessionManager.php">
    <DocblockTypeContradiction>
      <code>$_SESSION !== $storage</code>
      <code><![CDATA[null === $this->name]]></code>
      <code><![CDATA[null === $this->validatorChain]]></code>
    </DocblockTypeContradiction>
    <MissingClosureParamType>
      <code>$test</code>
    </MissingClosureParamType>
    <MissingReturnType>
      <code>initializeValidatorChain</code>
    </MissingReturnType>
    <MixedArgument>
      <code>$validator</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$sid</code>
      <code>$validator</code>
      <code>$validatorValues</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>new $validator(null)</code>
    </MixedMethodCall>
    <MoreSpecificImplementedParamType>
      <code>$id</code>
    </MoreSpecificImplementedParamType>
    <NoValue>
      <code>$oldSessionData</code>
    </NoValue>
    <PossiblyUndefinedArrayOffset>
      <code>$_SERVER['REQUEST_TIME']</code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor>
      <code>$name</code>
      <code>$validatorChain</code>
      <code>SessionManager</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(bool) $config->getCookieHttpOnly()]]></code>
      <code><![CDATA[(bool) $config->getCookieSecure()]]></code>
      <code>(bool) $deleteOldSession</code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code><![CDATA[! empty($oldSessionData) && is_array($oldSessionData)]]></code>
      <code>is_array($oldSessionData)</code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code>$oldSessionData instanceof Traversable</code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Storage/AbstractSessionArrayStorage.php">
    <MethodSignatureMustProvideReturnType occurrences="2">
      <code>serialize</code>
      <code>unserialize</code>
    </MethodSignatureMustProvideReturnType>
    <InvalidReturnStatement>
      <code>$_SESSION</code>
      <code>$this</code>
      <code>$this</code>
      <code>$values</code>
      <code>$values</code>
      <code>new ArrayIterator($_SESSION)</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>SessionStorage</code>
      <code>SessionStorage</code>
      <code>array</code>
      <code><![CDATA[array<TKey, TValue>]]></code>
      <code>getIterator</code>
    </InvalidReturnType>
    <InvalidScalarArgument>
      <code>$_SESSION</code>
    </InvalidScalarArgument>
    <MixedArgument>
      <code>$_SESSION['__Laminas']</code>
      <code>$_SESSION['__Laminas'][$key]</code>
      <code>$locks</code>
      <code>$locks</code>
      <code>$locks</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$_SESSION['__Laminas'][$key]</code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code>$_SESSION[$key]</code>
      <code>$_SESSION[$key]</code>
      <code>$_SESSION[$key]</code>
      <code>$_SESSION[$key]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$_SESSION[$key]</code>
      <code>$_SESSION['__Laminas'][$key]</code>
      <code>$locks</code>
      <code>$locks</code>
      <code>$readOnly</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
      <code>float</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->getMetadata('_READONLY')]]></code>
      <code><![CDATA[$this->getMetadata('_REQUEST_ACCESS_TIME')]]></code>
    </MixedReturnStatement>
    <ParamNameMismatch>
      <code>$metaData</code>
    </ParamNameMismatch>
    <PossiblyInvalidArgument>
      <code>$key</code>
    </PossiblyInvalidArgument>
    <RedundantCondition>
      <code>$_SESSION instanceof ArrayObject</code>
      <code>$locks</code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code>is_object($input)</code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Storage/ArrayStorage.php">
    <ArgumentTypeCoercion>
      <code>$flags</code>
      <code>$iteratorClass</code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
      <code>'__Laminas'</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>$locks</code>
      <code>$locks</code>
      <code>$locks</code>
      <code>$this['__Laminas']</code>
      <code>$this['__Laminas'][$key]</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$this['__Laminas']</code>
      <code>$this['__Laminas']</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code>$array[$key]</code>
      <code>$this['__Laminas'][$key]</code>
      <code>$this['__Laminas'][$key]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code>$this['__Laminas'][$key]</code>
      <code>$this['__Laminas'][$key]</code>
      <code>$this['__Laminas'][$key]</code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$array</code>
      <code>$locks</code>
      <code>$locks</code>
      <code>$readOnly</code>
      <code>$this['__Laminas']</code>
      <code>$this['__Laminas'][$key]</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
      <code>float</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->getMetadata('_READONLY')]]></code>
      <code><![CDATA[$this->getMetadata('_REQUEST_ACCESS_TIME')]]></code>
    </MixedReturnStatement>
    <ParamNameMismatch>
      <code>$metaData</code>
    </ParamNameMismatch>
    <PossiblyInvalidArgument>
      <code>$key</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code>$this['__Laminas']</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess>
      <code>$this['__Laminas'][$key]</code>
    </PossiblyNullArrayAccess>
    <PropertyNotSetInConstructor>
      <code>ArrayStorage</code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code>$locks</code>
    </RedundantCondition>
  </file>
  <file src="src/Storage/Factory.php">
    <DocblockTypeContradiction>
      <code>is_array($options)</code>
      <code>is_string($type)</code>
    </DocblockTypeContradiction>
    <InvalidStringClass>
      <code>new $type($input)</code>
      <code>new $type($input, $flags, $iteratorClass)</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code>new $type($input)</code>
      <code>new $type($input, $flags, $iteratorClass)</code>
      <code>new $type($options)</code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code>$options['iterator_class']</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$flags</code>
      <code>$input</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>new $type($options)</code>
    </MixedMethodCall>
    <MoreSpecificReturnType>
      <code>AbstractSessionArrayStorage</code>
      <code>ArrayStorage</code>
      <code>StorageInterface</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Storage/SessionArrayStorage.php">
    <MethodSignatureMustProvideReturnType>
      <code>offsetGet</code>
    </MethodSignatureMustProvideReturnType>
    <MixedArrayOffset>
      <code>$_SESSION[$key]</code>
      <code>$_SESSION[$key]</code>
    </MixedArrayOffset>
  </file>
  <file src="src/Storage/SessionStorage.php">
    <InvalidArgument>
      <code>'_IMMUTABLE'</code>
      <code>'_IMMUTABLE'</code>
      <code>'_IMMUTABLE'</code>
    </InvalidArgument>
    <PropertyNotSetInConstructor>
      <code>SessionStorage</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(array) $this->getArrayCopy()]]></code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code>$_SESSION !== $this</code>
      <code>$_SESSION !== $this</code>
      <code>$_SESSION instanceof ArrayObject</code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code>is_object($input)</code>
      <code>is_object($input)</code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Validator/AbstractValidatorChainEM3.php">
    <DeprecatedTrait>
      <code>ValidatorChainTrait</code>
    </DeprecatedTrait>
    <ImplementedReturnTypeMismatch>
      <code>CallbackHandler</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement>
      <code><![CDATA[$this->attachValidator($eventName, $listener, $priority)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>CallbackHandler</code>
    </InvalidReturnType>
    <MixedAssignment>
      <code>$data</code>
      <code>$validator</code>
      <code>$validators</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>new $validator($data)</code>
    </MixedMethodCall>
    <UndefinedDocblockClass>
      <code>CallbackHandler</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Validator/HttpUserAgent.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>$data</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Validator/ValidatorChainTrait.php">
    <MixedArgumentTypeCoercion>
      <code>$callback</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$data</code>
    </MixedAssignment>
    <UndefinedDocblockClass>
      <code>CallbackHandler|callable</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/ValidatorChain.php">
    <MixedArgumentTypeCoercion>
      <code>$callback</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$data</code>
      <code>$data</code>
      <code>$validator</code>
      <code>$validators</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>new $validator($data)</code>
    </MixedMethodCall>
  </file>
  <file src="test/AbstractContainerTest.php">
    <InvalidPropertyAssignmentValue>
      <code>new TestContainer('Default', $manager)</code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="test/Config/SessionConfigTest.php">
    <ArgumentTypeCoercion>
      <code>'InvalidArgumentException'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code>$handler</code>
      <code>$saveHandler</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>24</code>
      <code>24</code>
    </InvalidArgument>
    <InvalidCast>
      <code>$handler</code>
      <code>$saveHandler</code>
    </InvalidCast>
    <InvalidScalarArgument>
      <code>1</code>
    </InvalidScalarArgument>
    <MissingClosureReturnType>
      <code>static function (?string $module = null) {</code>
      <code>static function (?string $module = null) {</code>
    </MissingClosureReturnType>
    <MissingReturnType>
      <code>testCookieSameSiteAltersIniSetting</code>
      <code>testCookieSameSiteDefaultsToIniSettings</code>
      <code>testCookieSameSiteIsMutable</code>
    </MissingReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[var_export($this->config->toArray(), 1)]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCondition>
      <code>assertFalse</code>
    </RedundantCondition>
    <UnevaluatedCode>
      <code><![CDATA[$this->config->getEntropyFile();]]></code>
      <code><![CDATA[$this->config->getEntropyLength();]]></code>
      <code><![CDATA[$this->config->getHashBitsPerCharacter();]]></code>
      <code><![CDATA[$this->config->getHashFunction();]]></code>
      <code><![CDATA[$this->config->setEntropyFile(__FILE__);]]></code>
      <code><![CDATA[$this->config->setEntropyLength(0);]]></code>
      <code><![CDATA[$this->config->setHashBitsPerCharacter(5);]]></code>
      <code><![CDATA[$this->config->setHashFunction('foobar_bogus');]]></code>
      <code><![CDATA[$this->expectDeprecation();]]></code>
      <code><![CDATA[$this->expectDeprecation();]]></code>
      <code><![CDATA[$this->expectDeprecation();]]></code>
      <code><![CDATA[$this->expectDeprecation();]]></code>
      <code><![CDATA[$this->expectDeprecation();]]></code>
      <code><![CDATA[$this->expectDeprecation();]]></code>
      <code><![CDATA[$this->expectDeprecation();]]></code>
      <code><![CDATA[$this->expectDeprecation();]]></code>
    </UnevaluatedCode>
  </file>
  <file src="test/Config/StandardConfigTest.php">
    <DeprecatedMethod>
      <code>expectDeprecation</code>
      <code>expectDeprecation</code>
      <code>expectDeprecation</code>
      <code>expectDeprecation</code>
      <code>expectDeprecation</code>
      <code>expectDeprecation</code>
      <code>expectDeprecation</code>
      <code>expectDeprecation</code>
      <code>getEntropyFile</code>
      <code>getEntropyLength</code>
      <code>getHashBitsPerCharacter</code>
      <code>getHashFunction</code>
      <code>setEntropyFile</code>
      <code>setEntropyLength</code>
      <code>setHashBitsPerCharacter</code>
      <code>setHashFunction</code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>'foobar_bogus'</code>
      <code>24</code>
      <code>24</code>
    </InvalidArgument>
    <MissingReturnType>
      <code>testCookieSameSiteIsMutable</code>
    </MissingReturnType>
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(bool) $this->config->getUseCookies()]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="test/ConfigProviderTest.php">
    <MixedArgument>
      <code>$abstractFactories</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$aliases[SessionManager::class]</code>
      <code>$config['abstract_factories']</code>
      <code>$config['aliases']</code>
      <code>$config['factories']</code>
      <code>$config[LegacyConfigInterface::class]</code>
      <code>$config[LegacyManagerInterface::class]</code>
      <code>$config[LegacySessionManager::class]</code>
      <code>$config[LegacyStorageInterface::class]</code>
      <code>$factories[ConfigInterface::class]</code>
      <code>$factories[ManagerInterface::class]</code>
      <code>$factories[StorageInterface::class]</code>
      <code><![CDATA[$this->config['dependencies']['aliases']]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code>$config[LegacyConfigInterface::class]</code>
      <code>$config[LegacyManagerInterface::class]</code>
      <code>$config[LegacySessionManager::class]</code>
      <code>$config[LegacyStorageInterface::class]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$abstractFactories</code>
      <code>$aliases</code>
      <code>$config</code>
      <code>$config</code>
      <code>$factories</code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion>
      <code>(new ConfigProvider())()</code>
    </MixedPropertyTypeCoercion>
    <UndefinedClass>
      <code>LegacyConfigInterface</code>
      <code>LegacyManagerInterface</code>
      <code>LegacySessionManager</code>
      <code>LegacyStorageInterface</code>
    </UndefinedClass>
  </file>
  <file src="test/ContainerTest.php">
    <MixedArgument>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata['EXPIRE_HOPS_KEYS']</code>
      <code>$metadata['EXPIRE_KEYS']</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$metadata['EXPIRE']</code>
      <code>$metadata['EXPIRE']</code>
      <code>$metadata['EXPIRE_HOPS']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS']</code>
      <code>$metadata['EXPIRE_HOPS_KEYS']['foo']</code>
      <code>$metadata['EXPIRE_KEYS']</code>
      <code>$metadata['EXPIRE_KEYS']</code>
      <code>$metadata['EXPIRE_KEYS']</code>
      <code>$metadata['EXPIRE_KEYS']</code>
      <code>$metadata['EXPIRE_KEYS']</code>
      <code>$metadata['EXPIRE_KEYS']['bat']</code>
      <code>$metadata['EXPIRE_KEYS']['baz']</code>
      <code>$metadata['EXPIRE_KEYS']['foo']</code>
      <code>$metadata['EXPIRE_KEYS']['foo']</code>
      <code>$storage['Default']['foo']</code>
      <code>$storage['foo']['baz']</code>
      <code><![CDATA[$this->container['foo']['bar']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$hops</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
    </MixedAssignment>
    <NoInterfaceProperties>
      <code><![CDATA[$this->manager->started]]></code>
    </NoInterfaceProperties>
    <PossiblyUndefinedArrayOffset>
      <code>$_SERVER['REQUEST_TIME']</code>
      <code>$_SERVER['REQUEST_TIME']</code>
      <code>$_SERVER['REQUEST_TIME']</code>
      <code>$_SERVER['REQUEST_TIME']</code>
      <code>$_SERVER['REQUEST_TIME']</code>
      <code>$_SERVER['REQUEST_TIME']</code>
      <code>$_SERVER['REQUEST_TIME']</code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType>
      <code>assertIsArray</code>
    </RedundantConditionGivenDocblockType>
    <UnusedVariable>
      <code>$container</code>
      <code>$container</code>
    </UnusedVariable>
  </file>
  <file src="test/SaveHandler/AbstractDbTableGatewayTest.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! $this->adapter]]></code>
      <code><![CDATA[$this->adapter]]></code>
    </DocblockTypeContradiction>
    <MixedAssignment>
      <code>$data</code>
    </MixedAssignment>
    <PossiblyUndefinedMethod>
      <code>count</code>
    </PossiblyUndefinedMethod>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->adapter]]></code>
      <code>assertTrue</code>
      <code>is_string($data)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/SaveHandler/CacheTest.php">
    <MixedAssignment>
      <code>$data</code>
    </MixedAssignment>
    <RedundantConditionGivenDocblockType>
      <code>assertTrue</code>
      <code>is_string($data)</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedDocblockClass>
      <code>CacheAdapter</code>
    </UndefinedDocblockClass>
  </file>
  <file src="test/SaveHandler/DbTableGatewayOptionsTest.php">
    <UnusedVariable>
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
    </UnusedVariable>
  </file>
  <file src="test/SaveHandler/MongoDBTest.php">
    <DeprecatedMethod>
      <code>count</code>
      <code>count</code>
      <code>count</code>
      <code>count</code>
      <code>count</code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code>0</code>
      <code>123</code>
      <code>123</code>
      <code>123</code>
      <code>456</code>
      <code>456</code>
      <code>456</code>
    </InvalidArgument>
    <PossiblyFalseArgument>
      <code>getenv('TESTS_LAMINAS_SESSION_ADAPTER_DRIVER_MONGODB_CONNECTION_STRING')</code>
    </PossiblyFalseArgument>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->mongoCollection]]></code>
      <code>assertTrue</code>
      <code>is_string($data)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/Service/ContainerAbstractServiceFactoryTest.php">
    <DeprecatedClass occurrences="1">
      <code>new Config</code>
    </DeprecatedClass>
    <MixedAssignment>
      <code>$container</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getManager</code>
    </MixedMethodCall>
  </file>
  <file src="test/Service/SessionConfigFactoryTest.php">
    <MissingReturnType>
      <code>testServiceNotCreatedWhenInvalidSamesiteConfig</code>
    </MissingReturnType>
    <MixedAssignment>
      <code>$config</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getName</code>
    </MixedMethodCall>
  </file>
  <file src="test/Service/SessionManagerFactoryTest.php">
    <MixedArgument>
      <code>$chain</code>
      <code>$chain</code>
      <code>$manager</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$listener[0]</code>
      <code>$validatorData[Validator\HttpUserAgent::class]</code>
      <code>$validatorData[Validator\RemoteAddr::class]</code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$chain</code>
      <code>$chain</code>
      <code>$listener</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$manager</code>
      <code>$validatorData</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getConfig</code>
      <code>getSaveHandler</code>
      <code>getStorage</code>
      <code>getStorage</code>
      <code>getValidatorChain</code>
      <code>getValidatorChain</code>
      <code>start</code>
      <code>start</code>
      <code>start</code>
    </MixedMethodCall>
    <UnusedVariable>
      <code>$manager</code>
      <code>$manager</code>
    </UnusedVariable>
  </file>
  <file src="test/Service/StorageFactoryTest.php">
    <MixedArrayAccess>
      <code>$config['session_storage']['options']</code>
      <code>$config['session_storage']['options']['input']</code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$storage</code>
      <code>$storage</code>
      <code>$test</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>toArray</code>
    </MixedMethodCall>
    <UnusedVariable>
      <code>$storage</code>
    </UnusedVariable>
  </file>
  <file src="test/SessionArrayStorageTest.php">
    <InvalidScalarArgument>
      <code>$_SESSION</code>
      <code>$_SESSION</code>
    </InvalidScalarArgument>
    <MixedArrayAccess>
      <code>$_SESSION['test']['foo']</code>
      <code><![CDATA[$this->storage['foo']['bar']]]></code>
      <code><![CDATA[$this->storage['foo']['bar']]]></code>
      <code><![CDATA[$this->storage['foo']['bar']]]></code>
      <code><![CDATA[$this->storage['foo']['bar']['baz']]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code>$_SESSION['foo']['bar']</code>
      <code><![CDATA[$this->storage['bar'][]]]></code>
      <code><![CDATA[$this->storage['baz']['foo']]]></code>
    </MixedArrayAssignment>
    <TypeDoesNotContainType>
      <code>assertSame</code>
    </TypeDoesNotContainType>
  </file>
  <file src="test/SessionManagerTest.php">
    <DocblockTypeContradiction>
      <code>assertIsArray</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$this->error]]></code>
      <code>1</code>
      <code>1</code>
      <code>[$this, 'handleErrors']</code>
    </InvalidArgument>
    <InvalidScalarArgument>
      <code>$_SESSION</code>
    </InvalidScalarArgument>
    <MixedArgument>
      <code>$_SESSION</code>
      <code>$compare</code>
      <code>$compare + 10</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$_SESSION[$key]</code>
      <code>$_SESSION[$key]</code>
      <code>$_SESSION['__Laminas']['_VALID']</code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$compare</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$cookieTs</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$metaData</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$sName</code>
      <code>$ts</code>
      <code>$ts</code>
      <code>$ttl</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$compare</code>
      <code>$ttl</code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$_SESSION->key1]]></code>
      <code><![CDATA[$_SESSION->key2]]></code>
    </MixedPropertyFetch>
    <NoValue>
      <code>$_SESSION</code>
    </NoValue>
    <PossiblyNullOperand>
      <code>var_export($headers, 1)</code>
      <code>var_export($headers, 1)</code>
    </PossiblyNullOperand>
    <PossiblyUndefinedArrayOffset>
      <code>$_SERVER['REQUEST_TIME']</code>
      <code>$_SERVER['REQUEST_TIME']</code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUndefinedVariable>
      <code>$header</code>
      <code>$header</code>
    </PossiblyUndefinedVariable>
    <RedundantCondition>
      <code>assertFalse</code>
      <code>assertSame</code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code>assertIsArray</code>
    </TypeDoesNotContainType>
    <UnusedVariable>
      <code>$origId</code>
    </UnusedVariable>
  </file>
  <file src="test/SessionStorageTest.php">
    <InvalidMethodCall>
      <code>getArrayCopy</code>
    </InvalidMethodCall>
    <InvalidScalarArgument>
      <code>$_SESSION</code>
    </InvalidScalarArgument>
  </file>
  <file src="test/StorageTest.php">
    <MixedArrayAccess>
      <code><![CDATA[$this->storage['foo']['bar']]]></code>
      <code><![CDATA[$this->storage['foo']['bar']]]></code>
      <code><![CDATA[$this->storage['foo']['bar']['baz']]]></code>
    </MixedArrayAccess>
    <PossiblyNullArrayAccess>
      <code><![CDATA[$this->storage['foo']['bar']]]></code>
      <code><![CDATA[$this->storage['foo']['bar']]]></code>
      <code><![CDATA[$this->storage['foo']['bar']['baz']]]></code>
    </PossiblyNullArrayAccess>
  </file>
  <file src="test/TestAsset/TestConfig.php">
    <ImplementedReturnTypeMismatch>
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
      <code>void</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="test/TestAsset/TestContainer.php">
    <PropertyNotSetInConstructor>
      <code>TestContainer</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/TestAsset/TestDbTableGatewaySaveHandler.php">
    <MethodSignatureMustProvideReturnType>
      <code>read</code>
      <code>destroy</code>
    </MethodSignatureMustProvideReturnType>
    <PossiblyInvalidArgument>
      <code>$id</code>
      <code>$id</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor>
      <code>TestDbTableGatewaySaveHandler</code>
      <code>TestDbTableGatewaySaveHandler</code>
      <code>TestDbTableGatewaySaveHandler</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/TestAsset/TestManager.php">
    <ImplementedReturnTypeMismatch>
      <code>void</code>
      <code>void</code>
      <code>void</code>
    </ImplementedReturnTypeMismatch>
    <InvalidPropertyAssignmentValue>
      <code>ArrayStorage::class</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnType>
      <code>forgetMe</code>
      <code>getId</code>
      <code>getName</code>
      <code>getValidatorChain</code>
      <code>isValid</code>
      <code>regenerateId</code>
      <code>sessionExists</code>
      <code>setValidatorChain</code>
    </InvalidReturnType>
    <PropertyNotSetInConstructor>
      <code>TestManager</code>
    </PropertyNotSetInConstructor>
    <UndefinedDocblockClass>
      <code><![CDATA[class-string<StorageInterface>]]></code>
      <code>protected $storageDefaultClass = ArrayStorage::class;</code>
    </UndefinedDocblockClass>
  </file>
  <file src="test/TestAsset/TestSaveHandler.php">
    <ImplementedParamTypeMismatch>
      <code>$data</code>
    </ImplementedParamTypeMismatch>
    <ImplementedReturnTypeMismatch>
      <code>void</code>
      <code>void</code>
      <code>void</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="test/TestAsset/TestSaveHandlerWithValidator.php">
    <ImplementedParamTypeMismatch>
      <code>$data</code>
    </ImplementedParamTypeMismatch>
    <ImplementedReturnTypeMismatch>
      <code>bool</code>
      <code>string</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnType>
      <code>string</code>
    </InvalidReturnType>
    <MismatchingDocblockReturnType>
      <code>string</code>
    </MismatchingDocblockReturnType>
  </file>
  <file src="test/Validator/IdTest.php">
    <InvalidScalarArgument>
      <code>$bitsPerCharacter</code>
    </InvalidScalarArgument>
  </file>
  <file src="test/Validator/RemoteAddrTest.php">
    <MissingConstructor>
      <code>$backup</code>
    </MissingConstructor>
  </file>
  <file src="test/Validator/ValidatorChainTest.php">
    <NoInterfaceProperties>
      <code>$validator::$isValidCallCount</code>
    </NoInterfaceProperties>
  </file>
</files>
